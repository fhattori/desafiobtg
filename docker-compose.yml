version: '3.1'

services:
  mongo:
    image: mongo
    restart: always
    container_name : mongo
    hostname: mongo
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=pass123
    volumes:
      - ./data/mongo/001_usuarios.js:/docker-entrypoint-initdb.d/001_usuarios.js:ro
      - ./data/mongo/002_initialdata.js:/docker-entrypoint-initdb.d/002_initialdata.js:ro

  mongo-express:
    image: mongo-express
    restart: always
    container_name : mongo-express
    links:
      - mongo
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: pass123
      ME_CONFIG_MONGODB_URL: mongodb://admin:pass123@mongo:27017/
      ME_CONFIG_MONGODB_SERVER: mongo

  rabbitmq:
    image: rabbitmq:management
    container_name : rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672" #JMS Port
      - "15672:15672" #Management Port
      #usuario=guest
      #senha=guest

  servico-dados:
    image: fhattori/desafiobtg-dados:0.2
    container_name : desafiobtg-dados
    restart: always
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 10
    environment:
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_DATA_MONGODB=mongo
    depends_on:
      - rabbitmq
      - mongo
    links:
      - mongo
      - rabbitmq
    ports:
      - 8880:8880

  servico-rest:
    image: fhattori/desafiobtg-rest:0.3
    container_name : desafiobtg-rest
    restart: always
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 10
    environment:
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_DATA_MONGODB=mongo
    depends_on:
      - rabbitmq
      - mongo
      - servico-dados
    links:
      - mongo
      - rabbitmq
    ports:
      - 8080:8080
